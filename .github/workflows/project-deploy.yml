name: project-deploy

on:
  workflow_dispatch:
  push:
    branches: ["*"]

env:
  environment: ${{ github.ref_name == 'refs/heads/main' && 'production' || 'Development' }} # Set environment dynamically
  back-artifact-back-name: web-api-${{ github.head_ref == '' && github.ref_name || github.head_ref }}
  back-version: "9.0.x"
  back-working-directory: "src/back/TendersITAssistant.Presentation.API"
  front-artifact-name: web-client-${{ github.head_ref == '' && github.ref_name || github.head_ref }}
  front-version: "latest"
  front-working-directory: "src/front"

jobs:
  init:
    runs-on: ubuntu-latest
    environment:
      name: ${{ env.environement }}
    steps:
      - name: check vars and secrets
        run: |
          echo checking vars and secrets
          echo "github.ref_name: ${{ github.ref_name }}"
          echo "environment: ${{ env.environment }}"
          echo "vars :"
          echo "AZURE_WEBAPP_NAME: ${{ vars.AZURE_WEBAPP_NAME }}"
          echo ""
          echo env:
          echo back-artifact-back-name: ${{ env.back-artifact-back-name }}
          echo back-version: ${{ env.back-version }}
          echo back-working-directory: ${{ env.back-working-directory }}
          echo front-artifact-name: ${{ env.front-artifact-name }}
          echo front-version: ${{ env.front-version }}
          echo front-working-directory: ${{ env.front-working-directory }}
          echo ""
          echo secrets:
          echo "AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}"
          echo "AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}"
          echo "AZURE_DEPLOY_CLIENT_ID: ${{ secrets.AZURE_DEPLOY_CLIENT_ID }}"
          echo "AZURE_DEPLOY_CLIENT_SECRET: ${{ secrets.AZURE_DEPLOY_CLIENT_SECRET }}"
          echo "AZURE_WEBAPP_PUBLISH_PROFILE: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}"

  # front:
  #   uses: ./.github/workflows/build-front.yml
  #   with:
  #     artifact-name: ${{ env.front-artifact-name }}
  #     version: "latest"
  #     working-directory: "src/front"

  # back:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #       with:
  #         ref: ${{ github.ref }}

  #     - name: Set up dotnet environement
  #       uses: actions/setup-dotnet@v4
  #       with:
  #         dotnet-version: ${{ env.back-version }}

  #     - name: Set up dotnet dependency caching for faster builds
  #       uses: actions/cache@v3
  #       with:
  #         path: ~/.nuget/packages
  #         key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
  #         restore-keys: |
  #           ${{ runner.os }}-nuget-${{ env.back-version }}

  #     - name: install nugget packages
  #       run: dotnet restore
  #       working-directory: ${{ env.back-working-directory }}

  #     - name: build
  #       run: dotnet build --no-restore
  #       working-directory: ${{ env.back-working-directory }}

  #     - name: test
  #       run: dotnet test --no-build --verbosity normal
  #       working-directory: ${{ env.back-working-directory }}

  #     - name: publish
  #       run: dotnet publish -c Release -o ./artefact
  #       working-directory: ${{ env.back-working-directory }}

  #     - name: upload artifact for deployment job
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: ${{ env.back-artifact-name }}
  #         path: ${{ env.back-working-directory }}/artefact

  # azure:
  #   needs: [front, back]
  #   runs-on: ubuntu-latest
  #   environment:
  #     name: ${{ github.ref_name == 'refs/heads/main' && 'production' || 'Development' }} # Set environment dynamically
  #   steps:
  #     - name: Deploy to Azure Web App
  #       uses: ./.github/workflows/deploy-on-azure.yml
  #       with:
  #         artifact-back-name: ${{ env.artifact-back-name }}
  #         artifact-front-name: ${{ env.artifact-front-name }}
  #         azure-webapp-name: ${{ vars.AZURE_WEBAPP_NAME }}
  #         azure-webapp-package-path: "."
