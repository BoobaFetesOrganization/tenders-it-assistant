#######################################################
# IN PROGRESS - DO NOT USE - INFRA HAS TO BE DEFINED
#######################################################

# This workflow will build and push a .NET Core app to an Azure Web App when a commit is pushed to your default branch.
#
# This workflow assumes you have already created the target Azure App Service web app.
# For instructions see https://docs.microsoft.com/en-us/azure/app-service/quickstart-dotnetcore?tabs=net60&pivots=development-environment-vscode
#
# To configure this workflow:
#
# 1. Download the Publish Profile for your Azure Web App. You can download this file from the Overview page of your Web App in the Azure Portal.
#    For more information: https://docs.microsoft.com/en-us/azure/app-service/deploy-github-actions?tabs=applevel#generate-deployment-credentials
#
# 2. Create a secret in your repository named AZURE_WEBAPP_PUBLISH_PROFILE, paste the publish profile contents as the value of the secret.
#    For instructions on obtaining the publish profile see: https://docs.microsoft.com/azure/app-service/deploy-github-actions#configure-the-github-secret
#
# 3. Change the value for the vars.AZURE_WEBAPP_NAME. Optionally, change the azure-webapp-package-path and DOTNET_VERSION environment variables below.
#
# For more information on GitHub Actions for Azure: https://github.com/Azure/Actions
# For more information on the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# For more samples to get started with GitHub Action workflows to deploy to Azure: https://github.com/Azure/actions-workflow-samples

name: deploy-on-azure

on:
  workflow_call:
    inputs:
      artifact-back-name:
        description: "The name of the artefact of the backend to deploy"
        type: string
        required: true
      artifact-front-name:
        description: "The name of the artefact of the frontend to deploy"
        type: string
        required: true
      azure-webapp-package-path:
        description: "The path to the web app project"
        type: string
        default: "."
    secrets:
      AZURE_SUBSCRIPTION_ID:
        required: true
      AZURE_TENANT_ID:
        required: true
      AZURE_DEPLOY_CLIENT_ID:
        required: true
      AZURE_DEPLOY_CLIENT_SECRET:
        required: true
      AZURE_WEBAPP_PUBLISH_PROFILE:
        required: true

permissions:
  contents: read

jobs:
  deploy:
    permissions:
      contents: none
    runs-on: ubuntu-latest
    environment:
      name: ${{ github.ref_name == 'refs/heads/main' && 'production' || 'Development' }} # Set environment dynamically
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Debug var and secrets
        run: |
          echo "AZURE_WEBAPP_NAME: ${{ vars.AZURE_WEBAPP_NAME }}"
          echo "AZURE_WEBAPP_PUBLISH_PROFILE: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}"

      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: '{
            "subscriptionId":"${{ secrets.AZURE_SUBSCRIPTION_ID }}",
            "tenantId":"${{ secrets.AZURE_TENANT_ID }}",
            "clientId":"${{ secrets.AZURE_DEPLOY_CLIENT_ID }}",
            "clientSecret":"${{ secrets.AZURE_DEPLOY_CLIENT_SECRET }}"
            }'

      - name: setup tools
        run: sudo apt-get update && sudo apt-get install -y jq && sudo apt-get install -y moreutils

      - name: Download back artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ inputs.artifact-back-name }}

      - name: Download front artifact to wwwRoot
        uses: actions/download-artifact@v4
        with:
          name: ${{ inputs.artifact-front-name }}
          path: ./wwwroot

      - name: update api endpoint for the front
        run: |
          jq '.libs.infra.api.url = "https://${{ vars.AZURE_WEBAPP_NAME }}.azurewebsites.net/api"' \
          ./wwwroot/assets/appsettings.json | sponge ./wwwroot/assets/appsettings.json

      - name: upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: azure-package
          path: .

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ vars.AZURE_WEBAPP_NAME }}
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          package: ${{ inputs.azure-webapp-package-path }}
