# This workflow will build a .NET and a webpack projects and is made from "Deploy a .NET Core app to an Azure Web App" template
# see templates here: https://github.com/BoobaFetes/gemini-chat/actions/new
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: build-back

on:
  workflow_call:
    inputs:
      artifact-name:
        description: "The name of the artefact of the backend to deploy"
        type: string
        required: true
      version:
        description: "The version of dotnet to use"
        type: string
        required: true
      working-directory:
        description: "The path to the working directory"
        type: string
        required: true
    secrets:
      AZURE_STORAGE_CONNECTIONSTRING:
        required: true
      GOOGLE_GEMINI_APIKEY:
        required: true

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    environment: Production
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}

      - name: Set up dotnet environement
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ inputs.version }}

      - name: set secrets for appsettings.json
        run: |
          sed -i 's/"accountstorage": ".*"/"accountstorage": "${{ secrets.AZURE_STORAGE_CONNECTIONSTRING }}"/g' ${{ inputs.working-directory }}/appsettings.json
          sed -i 's/"Gemini_ApiKey": ".*"/"Gemini_ApiKey": "${{ secrets.GOOGLE_GEMINI_APIKEY }}"/g' ${{ inputs.working-directory }}/appsettings.json
          cat ${{ inputs.working-directory }}/appsettings.json

      - name: Set up dotnet dependency caching for faster builds
        uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget-${{ inputs.version }}

      - name: install nugget packages
        run: dotnet restore
        working-directory: ${{ inputs.working-directory }}

      - name: build
        run: dotnet build --no-restore
        working-directory: ${{ inputs.working-directory }}

      - name: test
        run: dotnet test --no-build --verbosity normal
        working-directory: ${{ inputs.working-directory }}

      - name: publish
        run: dotnet publish -c Release -o ./artefact
        working-directory: ${{ inputs.working-directory }}

      - name: upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: ${{ inputs.artifact-name }}
          path: ${{ inputs.working-directory }}/artefact
